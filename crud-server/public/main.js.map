{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/form-comp/form-comp.component.css","webpack:///./src/app/form-comp/form-comp.component.html","webpack:///./src/app/form-comp/form-comp.component.ts","webpack:///./src/app/my-service.service.ts","webpack:///./src/app/nav-bar/nav-bar.component.css","webpack:///./src/app/nav-bar/nav-bar.component.html","webpack:///./src/app/nav-bar/nav-bar.component.ts","webpack:///./src/app/new-form/new-form.component.css","webpack:///./src/app/new-form/new-form.component.html","webpack:///./src/app/new-form/new-form.component.ts","webpack:///./src/app/user-form/user-form.component.css","webpack:///./src/app/user-form/user-form.component.html","webpack:///./src/app/user-form/user-form.component.ts","webpack:///./src/app/view-user/view-user.component.css","webpack:///./src/app/view-user/view-user.component.html","webpack:///./src/app/view-user/view-user.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-nav-bar></app-nav-bar>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MyServiceService } from './my-service.service';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { FormCompComponent } from './form-comp/form-comp.component';\r\nimport { UserFormComponent } from './user-form/user-form.component';\r\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\r\nimport { NewFormComponent } from './new-form/new-form.component';\r\nimport { ViewUserComponent } from './view-user/view-user.component';\r\n// import { ResolveService } from './resolveService';\r\n \r\n\r\nconst routes : Routes = [\r\n{\r\n  path:'home',\r\n  component: NavBarComponent\r\n},\r\n{\r\n  path:'userForm/:id',\r\n  component: UserFormComponent\r\n},\r\n{\r\n  path: 'userList',\r\n  component: FormCompComponent\r\n},\r\n{\r\n  path: 'newForm',\r\n  component: NewFormComponent\r\n},\r\n{\r\n  path: 'viewUser',\r\n  component: ViewUserComponent\r\n},\r\n{\r\n  path: '',\r\n  redirectTo: '/userList',\r\n  pathMatch: 'full'\r\n},\r\n{\r\n  path: '**',\r\n  redirectTo: '/userList'\r\n}\r\n];\r\n\r\n@NgModule({\r\n  declarations: [\r\n  AppComponent,\r\n  FormCompComponent,\r\n  UserFormComponent,\r\n  NavBarComponent,\r\n  NewFormComponent,\r\n  ViewUserComponent\r\n  ],\r\n  imports: [\r\n  BrowserModule,\r\n  FormsModule,\r\n  ReactiveFormsModule,\r\n  HttpClientModule,       \r\n  RouterModule.forRoot(routes)\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".mt-10 {\\r\\n\\tmargin-top: 10px;\\r\\n}\"","module.exports = \"\\r\\n<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"col-sm-12\\\">\\r\\n      <div class=\\\"text-right mt-10\\\">\\r\\n        <button class=\\\"btn btn-primary\\\" routerLink=\\\"/newForm\\\">Create User</button>\\r\\n\\t\\t\\t</div>\\r\\n      <table class=\\\"table table-bordered mt-10\\\">\\r\\n        <thead>\\r\\n          <tr>\\r\\n            <th>S.No</th>\\r\\n            <th>Name</th>\\r\\n            <th>Address</th>\\r\\n            <th>PAN Number</th>\\r\\n            <th>Aadhar Number</th>\\r\\n            <th>Action</th>\\r\\n            <th>Delete</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let user of userData index as i\\\">\\r\\n          \\t<td class=\\\"text-center\\\">{{i+1}}</td>\\r\\n            <td class=\\\"text-center text-capitalize\\\">{{user.name?user.name:'N/A'}}</td>\\r\\n            <td class=\\\"text-center\\\">{{user.address?user.address:'N/A'}}</td>\\r\\n            <td class=\\\"text-center\\\">{{user.pan}}</td>\\r\\n            <td class=\\\"text-center\\\">{{user.aadhar?user.aadhar:'N/A'}}</td>\\r\\n            <td class=\\\"text-center\\\" routerLink=\\\"/viewUser\\\" [queryParams]=\\\"{id: i}\\\">Edit</td>\\r\\n            <td class=\\\"text-center\\\" (click)=\\\"deleteUser(user.email)\\\">Delete</td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MyServiceService } from '../my-service.service';\r\n\r\n@Component({\r\n  selector: 'app-form-comp',\r\n  templateUrl: './form-comp.component.html',\r\n  styleUrls: ['./form-comp.component.css']\r\n})\r\nexport class FormCompComponent implements OnInit {\r\nfriends;\r\nuserData;\r\n  constructor(\r\n  \tprivate friendServ : MyServiceService\r\n  \t){\r\n      this.getUser();\r\n    }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  getUser(){\r\n    this.friendServ.getUser()\r\n    .then(data => {\r\n      this.userData = data;\r\n    })\r\n  }\r\n\r\n  deleteUser(data: any){\r\n    let email = data;\r\n    this.friendServ.deleteUserByID({email})\r\n    .then(data => {\r\n      this.getUser();\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nconst apiURL: string = 'http://localhost:8000/api/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MyServiceService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUser() {\r\n  \treturn this.http.get(apiURL)\r\n  \t.toPromise()\r\n      .then((data: any) => {\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n\r\n  getUserByID(data) {\r\n  \treturn this.http.put(apiURL, data)\r\n  \t.toPromise()\r\n      .then((data: any) => {\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n  deleteUserByID(data) {\r\n    return this.http.post(apiURL + '/delete', data)\r\n    .toPromise()\r\n      .then((data: any) => {\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n  \r\n  createUser(data) {\r\n  \treturn this.http.post(apiURL , data)\r\n  \t.toPromise()\r\n      .then((data: any) => {\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-light bg-primary\\\">\\r\\n  <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Navbar</a>\\r\\n  <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarSupportedContent\\\" aria-controls=\\\"navbarSupportedContent\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\r\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n  </button>\\r\\n\\r\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarSupportedContent\\\">\\r\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\r\\n      <li class=\\\"nav-item\\\">\\r\\n        <a class=\\\"nav-link\\\" routerLink=\\\"/friendsForm\\\">User List <span class=\\\"sr-only\\\">(current)</span></a>\\r\\n      </li>\\r\\n    </ul>\\r\\n  </div>\\r\\n</nav>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MyServiceService } from '../my-service.service';\r\n\r\n@Component({\r\n  selector: 'app-nav-bar',\r\n  templateUrl: './nav-bar.component.html',\r\n  styleUrls: ['./nav-bar.component.css']\r\n})\r\nexport class NavBarComponent implements OnInit {\r\n\r\n  constructor(\r\n  \tprivate friendServ: MyServiceService \r\n  \t) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center mt-3\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <h3>Create User</h3>\\r\\n      <form name=\\\"myForm\\\" #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitForm(user)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.address\\\" placeholder=\\\"Enter Address\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"pan\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.pan\\\" placeholder=\\\"Enter PAN Number\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" email name=\\\"aadhar\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.aadhar\\\" placeholder=\\\"Enter Aadhar Number\\\" required>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Submit</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\n// import { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { MyServiceService } from '../my-service.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n\tselector: 'app-new-form',\r\n\ttemplateUrl: './new-form.component.html',\r\n\tstyleUrls: ['./new-form.component.css']\r\n})\r\nexport class NewFormComponent implements OnInit {\r\n\tuser= {};\r\n\r\n\tconstructor(\r\n\t\tprivate myServ: MyServiceService,\r\n\t\tprivate route: Router\r\n\t\t) { }\r\n\r\n\tngOnInit() {\r\n\t}\r\n\r\n\tsubmitForm(user){\r\n\t\tthis.myServ.createUser(user)\r\n\t\t.then(data => {\r\n\t\t\tthis.route.navigate(['/userList'])\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error)\r\n\t\t})\r\n\t}\r\n\r\n}\r\n","module.exports = \"\"","module.exports = \"<h1>Friend Details</h1>\\r\\n<ul class=\\\"list-group\\\" *ngFor=\\\"let key of userData\\\">\\r\\n  <li appHiglt class=\\\"list-group-item\\\">{{key}}: {{friendData[key]}}</li>\\r\\n</ul>\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { MyServiceService } from '../my-service.service';\r\n\r\n@Component({\r\n\tselector: 'app-user-form',\r\n\ttemplateUrl: './user-form.component.html',\r\n\tstyleUrls: ['./user-form.component.css']\r\n})\r\nexport class UserFormComponent implements OnInit {\r\n\tuserData;\r\n\tfriendData;\r\n\r\n\tconstructor(\r\n\t\tprivate route: ActivatedRoute,\r\n\t\tprivate friendServ: MyServiceService\r\n\t\t) { }\r\n\r\n\tngOnInit() {\r\n\t\tthis.friendServ.getUser()\r\n\t\t.then(data => {\r\n\t\t})\r\n\t\t// var id = this.route.snapshot.params.id;\r\n\t\t// var ID = Number(id);\r\n\t\t// this.friendData = this.friendServ.getFriends(ID);\r\n\t\t// this.userData = Object.keys(this.friendData);\r\n\t\t// console.log(this.friendServ.getFriendsList());\r\n\t}\r\n}\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row justify-content-center mt-3\\\">\\r\\n    <div class=\\\"col-6\\\">\\r\\n      <h3>Edit User</h3>\\r\\n      <form name=\\\"myForm\\\" #myForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateForm(user)\\\">\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"name\\\" [(ngModel)]=\\\"user.name\\\" class=\\\"form-control\\\" placeholder=\\\"Enter Name\\\">\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"address\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.address\\\" placeholder=\\\"Enter Address\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" name=\\\"pan\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.pan\\\" placeholder=\\\"Enter PAN Number\\\" required>\\r\\n        </div>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <input type=\\\"text\\\" email name=\\\"aadhar\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.aadhar\\\" placeholder=\\\"Enter Aadhar Number\\\" required>\\r\\n        </div>\\r\\n        <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Update</button>\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { MyServiceService } from '../my-service.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-view-user',\r\n  templateUrl: './view-user.component.html',\r\n  styleUrls: ['./view-user.component.css']\r\n})\r\nexport class ViewUserComponent implements OnInit {\r\n  user = {};\r\n  orderObj;\r\n  userData = {};\r\n  constructor(\r\n  \tprivate userServ: MyServiceService,\r\n    private route: ActivatedRoute,\r\n  \tprivate router: Router\r\n  \t) { \r\n}\r\n  ngOnInit() {\r\n  \t  this.route.queryParamMap.subscribe(params => {\r\n      this.orderObj = { ...params };\r\n      this.getAllUsers(this.orderObj);\r\n    });\r\n  }\r\n\r\n  getAllUsers(userId){\r\n    this.userServ.getUser()\r\n    .then(data => {\r\n      let ID = userId.params.id\r\n      this.user = data[ID];\r\n    })\r\n    .catch(error =>{\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n  updateForm(data){\r\n    this.userServ.getUserByID(data)\r\n    .then(data => {\r\n      this.router.navigate(['/friendsForm'])\r\n    })\r\n    .catch(error => {\r\n      console.log(error)\r\n    })\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}